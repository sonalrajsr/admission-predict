# -*- coding: utf-8 -*-
"""Admission Predict GRE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OUyDGnAKbCejFbx8bvOKgrjrA7-f_nfV
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot  as plt

data_frame = pd.read_csv("/content/Admission_Predict.csv")

data_frame

data_frame.info()

data_frame.duplicated().sum()

data_frame.drop(columns=['Serial No.'], inplace = True)

data_frame

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(data_frame.drop('Chance of Admit ', axis=1),
                                                    data_frame['Chance of Admit '], test_size=0.2, random_state=42)

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()

scaler.fit(X_train)

X_train_scaled = pd.DataFrame(scaler.transform(X_train),columns=X_train.columns)

X_test_scaled = pd.DataFrame(scaler.transform(X_test),columns=X_train.columns)

X_train_scaled

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

model = Sequential()

model.add(Dense(7, input_dim = 7, activation = 'relu'))
model.add(Dense(4, activation = 'relu'))
model.add(Dense(2, activation = 'relu'))

model.add(Dense(1, activation = 'linear'))

model.summary()

model.compile(loss='mean_squared_error', optimizer='adam', metrics=['mean_squared_error'])

history = model.fit(X_train_scaled, y_train, epochs=100, batch_size=10, validation_split=0.2)

y_pred = model.predict(X_test_scaled)

from sklearn.metrics import mean_squared_error, r2_score

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean squared error:", mse)
print("R-squared:", r2)

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title('Model Loss')
plt.ylabel('Loss')
plt.xlabel('Epoch')
plt.legend(['Train', 'Validation'], loc='upper right')
plt.show()

